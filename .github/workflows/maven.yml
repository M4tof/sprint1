name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Job 1: Checkout and build the project
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - uses: actions/checkout@v4

    # Step 2: Set up JDK 11
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

    # Step 3: Build the project and package the JAR
    - name: Build with Maven
      run: mvn -B clean package javadoc:aggregate -DskipTests=true --file pom.xml 

    # Save the workspace for subsequent jobs
    - name: Save Maven output
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: target/
    
    - name: List target directory contents
      run: ls -R target

  # Job 2: Run Tests
  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    # Step 1: Checkout the repository
    - uses: actions/checkout@v4

    # Step 2: Download build artifacts
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts

    # Step 3: Run tests
    - name: Run Tests
      run: mvn test

  # Job 3: Upload JAR and JavaDocs
  upload:
    runs-on: ubuntu-latest
    needs: build
  
    steps:
    # Step 1: Checkout the repository
    - uses: actions/checkout@v4
  
    # Step 2: Download build artifacts
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
  
    # Step 3: Locate the JAR file
    - name: Locate JAR file
      run: |
        echo "Listing root directory contents:"
        ls -R .
        echo "Moving JAR file to target directory"
        mkdir -p target
        mv io-project-architecture-*.jar target/
  
    # Step 4: Verify the target directory structure
    - name: Verify JAR file in target
      run: ls -R target
  
    # Step 5: Upload the JAR file
    - name: Upload JAR file
      uses: actions/upload-artifact@v3
      with:
        name: java-package
        path: target/*.jar

    # Step 6: Generate and upload JavaDocs
    - name: Generate JavaDocs
      run: mvn javadoc:aggregate --file pom.xml

    - name: Upload JavaDocs
      uses: actions/upload-artifact@v3
      with:
        name: javadoc
        path: target/site/apidocs/

